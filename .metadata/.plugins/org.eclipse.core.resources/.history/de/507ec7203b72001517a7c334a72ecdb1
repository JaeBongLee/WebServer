package string_calculator;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class StringCalculator {
	
	
	public int addInnerTextNumbers(String text){
		
		if(text == ""){
			return 0;
		}
		
		String[] tokens = text.split(",|;");
		int[] numbers = toInt(tokens);
	
		return addNumbersInStringArr(numbers);
	}
	
	public int divideCustom(String str){
	
		int result =0;
		
		Matcher m = Pattern.compile("//(.)\n(.*)").matcher(str);
		m.find();
		
		String customDelimeter = m.group(1);
		String[] tokens=m.group(2).split(customDelimeter);
		int[] numbers = toInt(tokens);
		
		result = addNumbersInStringArr(numbers);
		
		return result;
		
		
	}

	public int addNumbersInStringArr(int[] numbers){
		
		int result = 0;
		
		for(int i=0; i<numbers.length; i++)
		{
			checkRuntimeError(numbers[i]);
			result += numbers[i];
		}
		
		return result;
	}
	
	private int[] toInt(String[] values){
		int[] numbers = new int[values.length];
		for(int i = 0 ; i < values.length;i++){
			numbers[i] = Integer.parseInt(values[i]);
		}
		
		return numbers;
	}
		
	public void checkRuntimeError(int num){
		if(num < 0 ){
			throw new RuntimeException();
		}
	}
			
		

}
